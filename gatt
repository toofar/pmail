#!/usr/bin/env python

import os
import sys
import argparse
parser = argparse.ArgumentParser(
    description="Process attachments in mail files.")
parser.add_argument('in_file', help='Mail File To Process',
                    metavar='~/Maildir/new/foo', action='append')
parser.add_argument('dest', help='Directory (or file) to dump the attachments to',
                    metavar='/tmp/attachments/', nargs='?',
                    default=argparse.SUPPRESS)
parser.add_argument('-l','--list', help="Just list the attachments",
                    action='store_true', default=False)
parser.add_argument('-a','--all', help="Extract all the attachments, not just"+
                    "ones with application major types",
                    action='store_true', default=False)

# TODO: -l --list, -b --body, --include, --exclude, --no-clobber

args = parser.parse_args()

if not args.in_file:
    print >> sys.stderr, "No input file found."
    exit(1)

if len(args.in_file) > 1:
    print >> sys.stderr, "TODO: Support multiple input files."
    exit(1)

if not os.path.isfile(os.path.expanduser(args.in_file[0])):
    print >> sys.stderr, "Input file doesn't exist."
    exit(1)

inf = open(os.path.expanduser(args.in_file[0]),'r')

out = ""
try:
    if args.dest:
        out = args.dest
except:
    pass

from email.message import Message
from email.parser import Parser

msg = Parser().parse(inf)
atts = msg.get_payload()

import tempfile
ofiles = []
# TODO: Allow extract and list?
if args.list:
    tout = None
else:
    tout = tempfile.mkdtemp(prefix='atts')

# extract everything to a tempdir
for a in msg.walk():
    if a.get_content_maintype() == "multipart":
        continue

    if not args.all and a.get_content_maintype() != "application":
        continue

    fname = ""
    if a.get_params([]):
        for k, v in a.get_params():
            if k == 'name':
                fname = v

    if args.list:
        print "%s \t%s" % (fname if fname else "unnamed",
                              a.get_content_type())

    if not tout:
        continue

    if not fname:
        temp = tempfile.NamedTemporaryFile(suffix="."+a.get_content_subtype(),
                                           dir=tout, delete=False)
    else:
        temp = open(tout+os.sep+fname,'wb')

    try:
        temp.write(a.get_payload(decode=True))
        ofiles.extend([(temp.name,a)])
    finally:
        temp.close()

def move_to(ofiles, out):
    if out[-1] is os.path.sep and not os.path.isdir(out):
        os.mkdir(out)
    if len(ofiles) == 1:
        shutil.copy(ofiles[0][0], out)
        if os.path.isdir(out):
            # TODO: Maybe don't need to print this out when -l --list action is
            # implemnted?
            print "Saved to %s%s" % (out,ofiles[0][0].split('/')[-1])
    else:
        if os.path.exists(os.path.expanduser(out)) and not os.path.isdir(os.path.expanduser(out)):
                print >> sys.stderr, "%s is not a directory." % out
                print >> sys.stderr, "Extracted files are in %s" % tout
                exit(1)
        elif not os.path.exists(os.path.expanduser(out)):
            os.mkdir(out)

        for f,a in ofiles:
            shutil.copy(f, out)

# todo: other actions like list
if out and tout:
    import shutil
    move_to(ofiles, out)
    shutil.rmtree(tout)
elif tout:
    print "Attachments are saved to ",tout

